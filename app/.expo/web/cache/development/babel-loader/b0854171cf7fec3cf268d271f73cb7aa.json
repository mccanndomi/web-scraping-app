{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Feed.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ThreadRow from \"../components/ThreadRow\";\nimport { firebase } from \"../services/Firebase\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { PreferencesContext } from \"../services/PreferencesContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nfunction Feed(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useContext = React.useContext(PreferencesContext),\n      toggleTheme = _React$useContext.toggleTheme,\n      isThemeDark = _React$useContext.isThemeDark;\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          style: styles.headerIcon,\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"dots-vertical\",\n          size: 30,\n          color: colors.text,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        }));\n      }\n    });\n  }, [navigation, colors]);\n  useEffect(function () {\n    getAllPosts();\n  }, []);\n\n  function getAllPosts() {\n    return _regeneratorRuntime.async(function getAllPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database().ref(\"posts/\").on(\"value\", function (snapshot) {\n              var data = snapshot.val();\n\n              if (data != null) {\n                setPosts(Object.values(data));\n              }\n            }, function (errorObject) {\n              console.log(\"The read failed: \" + errorObject.code);\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(ThreadRow, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Hello World!\")), React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: getParentPosts(posts),\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flex: 1\n  },\n  headerIcon: {\n    marginHorizontal: 20\n  }\n});\nexport default Feed;\n\nfunction getParentPosts(data) {\n  var parents = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var element = data[i];\n\n    if (element.parrentID === \"\") {\n      parents[parents.length] = element;\n    }\n  }\n\n  return parents;\n}","map":{"version":3,"sources":["/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Feed.js"],"names":["React","useEffect","useState","ThreadRow","firebase","useTheme","PreferencesContext","MaterialCommunityIcons","Feed","navigation","posts","setPosts","modalVisible","setModalVisible","colors","useContext","toggleTheme","isThemeDark","useLayoutEffect","setOptions","headerRight","styles","headerIcon","text","getAllPosts","database","ref","on","snapshot","data","val","Object","values","errorObject","console","log","code","renderItem","item","container","Alert","alert","getParentPosts","id","StyleSheet","create","paddingTop","Platform","OS","StatusBar","currentHeight","flex","marginHorizontal","parents","i","length","element","parrentID"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  TouchableOpacity,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  Modal,\n} from \"react-native\";\nimport ThreadRow from \"../components/ThreadRow\";\nimport { firebase } from \"../services/Firebase\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { PreferencesContext } from \"../services/PreferencesContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nfunction Feed({ navigation }) {\n  const [posts, setPosts] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const { colors } = useTheme();\n  const { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity\n          style={styles.headerIcon}\n          onPress={() => setModalVisible(true)}\n        >\n          <MaterialCommunityIcons\n            name=\"dots-vertical\"\n            size={30}\n            color={colors.text}\n          />\n        </TouchableOpacity>\n      ),\n    });\n  }, [navigation, colors]);\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n\n  async function getAllPosts() {\n    //fetches all posts from db\n    return await firebase\n      .database()\n      .ref(\"posts/\")\n      .on(\n        \"value\",\n        function (snapshot) {\n          let data = snapshot.val();\n          if (data != null) {\n            setPosts(Object.values(data));\n          }\n        },\n        function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        }\n      );\n  }\n\n  const renderItem = ({ item }) => <ThreadRow item={item}></ThreadRow>;\n\n  return (\n    <View style={styles.container}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n        }}\n      >\n        <Text>Hello World!</Text>\n      </Modal>\n\n      <SafeAreaView />\n      <FlatList\n        data={getParentPosts(posts)}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flex: 1,\n  },\n  headerIcon: {\n    marginHorizontal: 20,\n  },\n});\n\nexport default Feed;\n\n//-------------- HELPER FUNCTIONS --------------\n\nfunction getParentPosts(data) {\n  var parents = [];\n  for (let i = 0; i < data.length; i++) {\n    const element = data[i];\n    if (element.parrentID === \"\") {\n      parents[parents.length] = element;\n    }\n  }\n  return parents;\n}\n"]},"metadata":{},"sourceType":"module"}