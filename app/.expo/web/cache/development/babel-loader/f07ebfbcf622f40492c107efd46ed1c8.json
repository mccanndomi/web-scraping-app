{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Feed.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ThreadRow from \"../components/ThreadRow\";\nimport { firebase } from \"../services/Firebase\";\n\nfunction Feed(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  useEffect(function () {\n    getAllPosts();\n  }, []);\n\n  function getAllPosts() {\n    return _regeneratorRuntime.async(function getAllPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database().ref(\"posts/\").on(\"value\", function (snapshot) {\n              var data = snapshot.val();\n\n              if (data != null) {\n                setPosts(Object.values(data));\n              }\n            }, function (errorObject) {\n              console.log(\"The read failed: \" + errorObject.code);\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(ThreadRow, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 34\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: getParentPosts(posts),\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default Feed;\n\nfunction getParentPosts(data) {\n  var parents = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var element = data[i];\n\n    if (element.parrentID === '') {\n      parents[parents.length] = element;\n    }\n  }\n\n  return parents;\n}","map":{"version":3,"sources":["/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Feed.js"],"names":["React","useEffect","useState","ThreadRow","firebase","Feed","navigation","posts","setPosts","getAllPosts","database","ref","on","snapshot","data","val","Object","values","errorObject","console","log","code","renderItem","item","styles","container","getParentPosts","id","StyleSheet","create","flex","parents","i","length","element","parrentID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,OAAOC,SAAP;AACA,SAASC,QAAT;;AAEA,SAASC,IAAT,OAA8B;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACAJ,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACnBK,KADmB;AAAA,MACZC,QADY;;AAG1BP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAAeA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEeL,QAAQ,CAClBM,QADU,GAEVC,GAFU,CAEN,QAFM,EAGVC,EAHU,CAIT,OAJS,EAKT,UAAUC,QAAV,EAAoB;AAClB,kBAAIC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAX;;AACA,kBAAID,IAAI,IAAI,IAAZ,EAAkB;AAChBN,gBAAAA,QAAQ,CAACQ,MAAM,CAACC,MAAP,CAAcH,IAAd,CAAD,CAAR;AACD;AACF,aAVQ,EAWT,UAAUI,WAAV,EAAuB;AACrBC,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,WAAW,CAACG,IAA9C;AACD,aAbQ,CAFf;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBF,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAEC,IAAF,SAAEA,IAAF;AAAA,WAAY,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAZ;AAAA,GAAnB;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAGC,cAAc,CAACnB,KAAD,CADvB;AAEE,IAAA,UAAU,EAAEe,UAFd;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACI,EAAf;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD;;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AACjCJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE;AADC;AADsB,CAAlB,CAAf;AAMA,eAAezB,IAAf;;AAIA,SAASqB,cAAT,CAAwBZ,IAAxB,EAA8B;AAC1B,MAAIiB,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,IAAI,CAACmB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,QAAME,OAAO,GAAGpB,IAAI,CAACkB,CAAD,CAApB;;AACA,QAAIE,OAAO,CAACC,SAAR,KAAsB,EAA1B,EAA8B;AAC1BJ,MAAAA,OAAO,CAACA,OAAO,CAACE,MAAT,CAAP,GAA0BC,OAA1B;AACH;AACJ;;AACD,SAAOH,OAAP;AACH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {StyleSheet, View, Text, FlatList} from 'react-native';\nimport ThreadRow from '../components/ThreadRow';\nimport { firebase } from \"../services/Firebase\";\n\nfunction Feed({ navigation }) {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n      getAllPosts();\n    }, []);\n\n    async function getAllPosts() {\n      //fetches all posts from db\n      return await firebase\n        .database()\n        .ref(\"posts/\")\n        .on(\n          \"value\",\n          function (snapshot) {\n            let data = snapshot.val();\n            if (data != null) {\n              setPosts(Object.values(data));\n            }\n          },\n          function (errorObject) {\n            console.log(\"The read failed: \" + errorObject.code);\n          }\n        );\n    }\n\n  const renderItem = ({item}) => <ThreadRow item={item}></ThreadRow>;\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={ getParentPosts(posts) }\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\ncontainer: {\n    flex: 1,\n  },\n});\n\nexport default Feed;\n\n//-------------- HELPER FUNCTIONS --------------\n\nfunction getParentPosts(data) {\n    var parents = [];\n    for (let i = 0; i < data.length; i++) {\n        const element = data[i];\n        if (element.parrentID === '') {\n            parents[parents.length] = element;\n        }\n    }\n    return parents;\n}"]},"metadata":{},"sourceType":"module"}