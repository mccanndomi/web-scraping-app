{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Thread.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar } from \"../components/Avatar\";\nimport { Comment } from \"../components/Comment\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { firebase } from \"../services/Firebase\";\nexport default function Thread(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var itemId = route.params.itemId;\n\n  var _useState = useState({\n    \"childIDs\": [],\n    \"comments\": 0,\n    \"date\": \" \",\n    \"description\": \" \",\n    \"id\": \" \",\n    \"parrentID\": \" \",\n    \"time\": \" \",\n    \"title\": \" \",\n    \"user\": \" \"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      thread = _useState2[0],\n      setThread = _useState2[1];\n\n  useEffect(function () {\n    getThread();\n  }, []);\n\n  function getThread() {\n    return _regeneratorRuntime.async(function getThread$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database().ref(\"posts/\").child(itemId).once(\"value\", function (snapshot) {\n              var data = snapshot.val();\n\n              if (data != null) {\n                setThread(JSON.parse(JSON.stringify(data)));\n              }\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }, React.createElement(View, {\n    style: styles.threadBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.topArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(Avatar, {\n    avatarName: thread.user,\n    size: 34,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.userText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Posted by \", thread.user), React.createElement(Text, {\n    style: styles.timeText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"- \", thread.time)), React.createElement(View, {\n    style: styles.middleArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, thread.title.replace(/(\\r\\n|\\n|\\r)/gm, \" \")), React.createElement(Text, {\n    style: styles.bodyText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, thread.description.replace(/(\\r\\n|\\n|\\r)/gm, \" \"))), React.createElement(View, {\n    style: styles.bottomArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"comment\",\n    size: 18,\n    color: \"#949494\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.bottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, thread.comments), React.createElement(MaterialCommunityIcons, {\n    name: \"calendar-blank\",\n    size: 18,\n    color: \"#949494\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.bottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, thread.date))), React.createElement(View, {\n    style: styles.threadComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, thread.childIDs.map(function (id) {\n    return React.createElement(Comment, {\n      commentId: id,\n      indentSize: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    });\n  }))));\n}\nvar styles = StyleSheet.create({\n  threadComments: {},\n  threadBody: {\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  titleText: {\n    color: 'black',\n    fontWeight: '600',\n    fontSize: 20,\n    padding: 10\n  },\n  bodyText: {\n    color: 'black',\n    paddingHorizontal: 10,\n    paddingBottom: 10\n  },\n  userText: {\n    color: '#949494',\n    fontStyle: \"italic\",\n    fontSize: 16,\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 10\n  },\n  timeText: {\n    color: '#949494',\n    fontStyle: \"italic\",\n    fontSize: 14,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n  bottomText: {\n    color: '#949494',\n    fontWeight: '600',\n    fontSize: 16,\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 5,\n    paddingRight: 25\n  },\n  topArea: {\n    flexDirection: 'row',\n    paddingLeft: 10,\n    alignItems: \"center\"\n  },\n  middleArea: {},\n  bottomArea: {\n    flexDirection: 'row',\n    paddingLeft: 10,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Thread.js"],"names":["React","useState","useEffect","Avatar","Comment","MaterialCommunityIcons","ScrollView","firebase","Thread","route","navigation","itemId","params","thread","setThread","getThread","database","ref","child","once","snapshot","data","val","JSON","parse","stringify","flex","styles","threadBody","topArea","user","userText","timeText","time","middleArea","titleText","title","replace","bodyText","description","bottomArea","bottomText","comments","date","threadComments","childIDs","map","id","StyleSheet","create","padding","backgroundColor","color","fontWeight","fontSize","paddingHorizontal","paddingBottom","fontStyle","paddingTop","paddingLeft","paddingRight","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Alert, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { Avatar } from \"../components/Avatar\";\nimport { Comment } from \"../components/Comment\"\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { firebase } from \"../services/Firebase\";\n\nexport default function Thread({ route, navigation }) {\n  const { itemId } = route.params;\n  const [thread, setThread] = useState({\n      \"childIDs\": [],\n      \"comments\": 0,\n      \"date\": \" \",\n      \"description\": \" \",\n      \"id\": \" \",\n      \"parrentID\": \" \",\n      \"time\": \" \",\n      \"title\": \" \",\n      \"user\": \" \",\n  });\n\n    useEffect(() => {\n      getThread();\n    }, []);\n\n    async function getThread() {\n      //fetches thread from db\n      return await firebase\n      .database()\n      .ref(\"posts/\")\n      .child(itemId)\n      .once(\"value\", function (snapshot) {\n        let data = snapshot.val();\n        if (data != null) {\n          setThread(JSON.parse(JSON.stringify(data)));\n        }\n      });\n    }\n\n    return(\n        <View style={{flex: 1}}>\n           <ScrollView>\n            <View style={styles.threadBody}>\n          <View style={styles.topArea}>\n            <Avatar avatarName={thread.user} size={34}></Avatar>\n            <Text style={styles.userText}>Posted by {thread.user}</Text>\n            <Text style={styles.timeText}>- {thread.time}</Text>\n          </View>\n          <View style={styles.middleArea}>\n            <Text style={styles.titleText}>{(thread.title).replace(/(\\r\\n|\\n|\\r)/gm,\" \")}</Text>\n            <Text style={styles.bodyText}>{(thread.description).replace(/(\\r\\n|\\n|\\r)/gm,\" \")}</Text>\n          </View>\n          <View style={styles.bottomArea}>\n            <MaterialCommunityIcons name=\"comment\" size={18} color=\"#949494\" />\n            <Text style={styles.bottomText}>{thread.comments}</Text>\n            <MaterialCommunityIcons name=\"calendar-blank\" size={18} color=\"#949494\" />\n            <Text style={styles.bottomText}>{thread.date}</Text>\n          </View>\n        </View>\n            <View style={styles.threadComments}>\n                {thread.childIDs.map((id) => (\n                    <Comment commentId={id} indentSize={0} />\n                ))}\n            </View>\n            </ScrollView> \n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    threadComments: {\n        \n    },\n    threadBody: {\n        padding: 10,\n        backgroundColor: 'white',\n    },\n      titleText: {\n        color: 'black',\n        fontWeight: '600',\n        fontSize: 20,\n        padding: 10,\n      },\n      bodyText: {\n        color: 'black',\n        paddingHorizontal: 10,\n        paddingBottom: 10,\n      },\n      userText: {\n        color: '#949494',\n        fontStyle: \"italic\",\n        fontSize: 16,\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingLeft: 10,\n      },\n      timeText: {\n        color: '#949494',\n        fontStyle: \"italic\",\n        fontSize: 14,\n        paddingTop: 10,\n        paddingBottom: 10,\n      },\n      bottomText: {\n        color: '#949494',\n        fontWeight: '600',\n        fontSize: 16,\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingLeft: 5,\n        paddingRight: 25,\n      },\n      topArea: {\n        flexDirection: 'row',\n        paddingLeft: 10,\n        alignItems: \"center\",\n      },\n      middleArea: {\n          \n      },\n      bottomArea: {\n        flexDirection: 'row',\n        paddingLeft: 10,\n        alignItems: \"center\",\n      },\n      \n});"]},"metadata":{},"sourceType":"module"}