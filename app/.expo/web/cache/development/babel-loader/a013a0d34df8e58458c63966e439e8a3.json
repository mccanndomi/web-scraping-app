{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/dommccann/Documents/Personal/git/web-scraping-app/app/components/SmallLinkPreview.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { getLinkPreview } from \"link-preview-js\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as Linking from \"expo-linking\";\n\nvar SmallLinkPreview = function SmallLinkPreview(props) {\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      linkData = _useState2[0],\n      setLinkData = _useState2[1];\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  function getData() {\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            getLinkPreview(props.url).then(function (data) {\n              return setLinkData(data);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return Linking.openURL(linkData.url);\n    },\n    style: [styles.container, {\n      borderColor: dark ? \"#2b2b2b\" : \"#dbdbdb\"\n    }]\n  }, React.createElement(View, {\n    style: styles.imagePreview\n  }, React.createElement(ImageBackground, {\n    style: styles.image,\n    imageStyle: {\n      borderRadius: 8\n    },\n    source: {\n      uri: linkData.hasOwnProperty(\"images\") ? linkData.images[0] : \" \"\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      width: 100,\n      justifyContent: \"flex-end\"\n    }\n  }, React.createElement(View, {\n    style: styles.linkPreviewText\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 1,\n    style: {\n      color: \"white\",\n      paddingVertical: 2,\n      paddingLeft: 4,\n      fontWeight: \"600\",\n      fontSize: 9\n    }\n  }, linkData.hasOwnProperty(\"url\") ? linkData.url.replace(/^.*:\\/\\//i, \"\") : \" \")), React.createElement(MaterialCommunityIcons, {\n    style: {\n      paddingRight: 2\n    },\n    name: \"link-variant\",\n    size: 10,\n    color: \"white\"\n  }))))));\n};\n\nexport { SmallLinkPreview };\nvar styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100\n  },\n  container: {\n    width: 100,\n    height: 100,\n    borderRadius: 8,\n    flexDirection: \"row\",\n    borderWidth: 1,\n    marginRight: 14\n  },\n  linkPreviewText: {\n    flexDirection: \"row\",\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n    width: 100,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderBottomRightRadius: 8,\n    borderBottomLeftRadius: 8\n  }\n});","map":{"version":3,"sources":["/Users/dommccann/Documents/Personal/git/web-scraping-app/app/components/SmallLinkPreview.js"],"names":["React","useState","useEffect","getLinkPreview","useTheme","MaterialCommunityIcons","Linking","SmallLinkPreview","props","dark","colors","linkData","setLinkData","getData","url","then","data","openURL","styles","container","borderColor","imagePreview","image","borderRadius","uri","hasOwnProperty","images","flex","width","justifyContent","linkPreviewText","color","paddingVertical","paddingLeft","fontWeight","fontSize","replace","paddingRight","StyleSheet","create","height","flexDirection","borderWidth","marginRight","backgroundColor","alignItems","borderBottomRightRadius","borderBottomLeftRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"; //Baskerville, Bodoni 72, Didot, Times New Roman\nimport {\n  StyleSheet,\n  View,\n  ImageBackground,\n  TouchableOpacity,\n  Text,\n} from \"react-native\";\nimport { getLinkPreview } from \"link-preview-js\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport * as Linking from \"expo-linking\";\n\nconst SmallLinkPreview = (props) => {\n  const { dark, colors } = useTheme();\n  const [linkData, setLinkData] = useState({});\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    getLinkPreview(props.url).then((data) => setLinkData(data));\n  }\n\n  return (\n    <TouchableOpacity\n      onPress={() => Linking.openURL(linkData.url)}\n      style={[\n        styles.container,\n        {\n          borderColor: dark ? \"#2b2b2b\" : \"#dbdbdb\",\n        },\n      ]}\n    >\n      <View style={styles.imagePreview}>\n        <ImageBackground\n          style={styles.image}\n          imageStyle={{\n            borderRadius: 8,\n          }}\n          source={{\n            uri: linkData.hasOwnProperty(\"images\") ? linkData.images[0] : \" \",\n          }}\n        >\n          <View\n            style={{\n              flex: 1,\n              width: 100,\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <View style={styles.linkPreviewText}>\n              <View style={{ flex: 1 }}>\n                <Text\n                  numberOfLines={1}\n                  style={{\n                    color: \"white\",\n                    paddingVertical: 2,\n                    paddingLeft: 4,\n                    fontWeight: \"600\",\n                    fontSize: 9,\n                  }}\n                >\n                  {linkData.hasOwnProperty(\"url\")\n                    ? linkData.url.replace(/^.*:\\/\\//i, \"\")\n                    : \" \"}\n                </Text>\n              </View>\n              <MaterialCommunityIcons\n                style={{ paddingRight: 2 }}\n                name=\"link-variant\"\n                size={10}\n                color=\"white\"\n              />\n            </View>\n          </View>\n        </ImageBackground>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport { SmallLinkPreview };\n\nconst styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100,\n  },\n  container: {\n    width: 100,\n    height: 100,\n    borderRadius: 8,\n    flexDirection: \"row\",\n    borderWidth: 1,\n    marginRight: 14,\n  },\n  linkPreviewText: {\n    flexDirection: \"row\",\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n    width: 100,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderBottomRightRadius: 8,\n    borderBottomLeftRadius: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}