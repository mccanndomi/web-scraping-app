{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Feed.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ThreadRow from \"../components/ThreadRow\";\nimport { FilterButton } from \"../components/FilterButton\";\nimport { firebase } from \"../services/Firebase\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { PreferencesContext } from \"../services/PreferencesContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nfunction Feed(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useState5 = useState(\"None\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterSelected = _useState6[0],\n      setFilterSelected = _useState6[1];\n\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          style: styles.headerIcon,\n          onPress: function onPress() {\n            return setModalVisible(true);\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"sort-variant\",\n          size: 30,\n          color: colors.text\n        }));\n      }\n    });\n  }, [navigation, colors]);\n  useEffect(function () {\n    getAllPosts();\n  }, []);\n\n  function getAllPosts() {\n    return _regeneratorRuntime.async(function getAllPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database().ref(\"posts/\").on(\"value\", function (snapshot) {\n              var data = snapshot.val();\n\n              if (data != null) {\n                setPosts(Object.values(data));\n              }\n            }, function (errorObject) {\n              console.log(\"The read failed: \" + errorObject.code);\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(ThreadRow, {\n      item: item\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(SafeAreaView, null), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible\n  }, React.createElement(View, {\n    style: styles.modalContainer\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      flex: 1\n    },\n    onPress: function onPress() {\n      return setModalVisible(false);\n    }\n  })), React.createElement(View, {\n    style: [styles.modalSection, {\n      backgroundColor: colors.card,\n      borderTopColor: colors.card\n    }]\n  }, React.createElement(Text, {\n    style: [styles.titleText, {\n      color: colors.text\n    }]\n  }, \"SORT BY\"), React.createElement(View, {\n    style: {\n      borderBottomColor: \"#949494\",\n      borderBottomWidth: 1,\n      marginHorizontal: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleFilterChange(\"Recent\", posts);\n    }\n  }, React.createElement(FilterButton, {\n    title: \"Recent\",\n    icon: \"new-box\",\n    isSelected: filterSelected == \"Recent\" ? true : false\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleFilterChange(\"Most Comments\", posts);\n    }\n  }, React.createElement(FilterButton, {\n    title: \"Most Comments\",\n    icon: \"comment-multiple\",\n    isSelected: filterSelected == \"Most Comments\" ? true : false\n  }))))), React.createElement(FlatList, {\n    data: getParentPosts(posts),\n    renderItem: renderItem,\n    key: function key(item) {\n      return item.id;\n    }\n  }));\n\n  function getParentPosts(data) {\n    var parents = [];\n\n    for (var i = 0; i < data.length; i++) {\n      var element = data[i];\n\n      if (element.parrentID === \"\") {\n        parents[parents.length] = element;\n      }\n    }\n\n    return parents;\n  }\n\n  function handleFilterChange(type, posts) {\n    var typeChange = type;\n    var currentPosts = posts;\n    setModalVisible(false);\n\n    switch (typeChange) {\n      case \"Recent\":\n        setFilterSelected(\"Recent\");\n        setPosts(currentPosts.sort(function (a, b) {\n          return new Date(a.date + \" \" + a.time).getTime() < new Date(b.date + \" \" + b.time).getTime() ? 1 : -1;\n        }));\n        break;\n\n      case \"Most Comments\":\n        setFilterSelected(\"Most Comments\");\n        setPosts(currentPosts.sort(function (a, b) {\n          return a.comments < b.comments ? 1 : -1;\n        }));\n        break;\n    }\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: Platform.OS !== \"android\" ? StatusBar.currentHeight : 0,\n    flex: 1\n  },\n  headerIcon: {\n    marginHorizontal: 20\n  },\n  modalContainer: {\n    flex: 1\n  },\n  titleText: {\n    fontSize: 16,\n    fontWeight: \"700\",\n    padding: 10\n  },\n  modalSection: {\n    borderRadius: 4,\n    paddingHorizontal: 10,\n    paddingTop: 10,\n    paddingBottom: 40,\n    shadowOpacity: 1,\n    shadowRadius: 200,\n    shadowColor: \"black\",\n    shadowOffset: {\n      height: 0,\n      width: 0\n    }\n  }\n});\nexport default Feed;","map":{"version":3,"sources":["/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Feed.js"],"names":["React","useEffect","useState","ThreadRow","FilterButton","firebase","useTheme","PreferencesContext","MaterialCommunityIcons","Feed","navigation","posts","setPosts","modalVisible","setModalVisible","filterSelected","setFilterSelected","dark","colors","useLayoutEffect","setOptions","headerRight","styles","headerIcon","text","getAllPosts","database","ref","on","snapshot","data","val","Object","values","errorObject","console","log","code","renderItem","item","container","modalContainer","flex","modalSection","backgroundColor","card","borderTopColor","titleText","color","borderBottomColor","borderBottomWidth","marginHorizontal","handleFilterChange","getParentPosts","id","parents","i","length","element","parrentID","type","typeChange","currentPosts","sort","a","b","Date","date","time","getTime","comments","StyleSheet","create","paddingTop","Platform","OS","StatusBar","currentHeight","fontSize","fontWeight","padding","borderRadius","paddingHorizontal","paddingBottom","shadowOpacity","shadowRadius","shadowColor","shadowOffset","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  TouchableOpacity,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  Modal,\n  Text,\n} from \"react-native\";\nimport ThreadRow from \"../components/ThreadRow\";\nimport { FilterButton } from \"../components/FilterButton\";\nimport { firebase } from \"../services/Firebase\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { PreferencesContext } from \"../services/PreferencesContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nfunction Feed({ navigation }) {\n  const [posts, setPosts] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [filterSelected, setFilterSelected] = useState(\"None\");\n  const { dark, colors } = useTheme();\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity\n          style={styles.headerIcon}\n          onPress={() => setModalVisible(true)}\n        >\n          <MaterialCommunityIcons\n            name=\"sort-variant\"\n            size={30}\n            color={colors.text}\n          />\n        </TouchableOpacity>\n      ),\n    });\n  }, [navigation, colors]);\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n\n  async function getAllPosts() {\n    //fetches all posts from db\n    return await firebase\n      .database()\n      .ref(\"posts/\")\n      .on(\n        \"value\",\n        function (snapshot) {\n          let data = snapshot.val();\n          if (data != null) {\n            setPosts(Object.values(data));\n          }\n        },\n        function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        }\n      );\n  }\n\n  const renderItem = ({ item }) => <ThreadRow item={item}></ThreadRow>;\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView />\n      <Modal animationType=\"slide\" transparent={true} visible={modalVisible}>\n        <View style={styles.modalContainer}>\n          <View style={{ flex: 1 }}>\n            <TouchableOpacity\n              style={{ flex: 1 }}\n              onPress={() => setModalVisible(false)}\n            />\n          </View>\n          <View\n            style={[\n              styles.modalSection,\n              {\n                backgroundColor: colors.card,\n                borderTopColor: colors.card,\n              },\n            ]}\n          >\n            <Text style={[styles.titleText, { color: colors.text }]}>\n              SORT BY\n            </Text>\n            <View\n              style={{\n                borderBottomColor: \"#949494\",\n                borderBottomWidth: 1,\n                marginHorizontal: 5,\n              }}\n            />\n            <TouchableOpacity\n              onPress={() => handleFilterChange(\"Recent\", posts)}\n            >\n              <FilterButton\n                title=\"Recent\"\n                icon=\"new-box\"\n                isSelected={filterSelected == \"Recent\" ? true : false}\n              />\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => handleFilterChange(\"Most Comments\", posts)}\n            >\n              <FilterButton\n                title=\"Most Comments\"\n                icon=\"comment-multiple\"\n                isSelected={filterSelected == \"Most Comments\" ? true : false}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n      <FlatList\n        data={getParentPosts(posts)}\n        renderItem={renderItem}\n        key={(item) => item.id}\n      />\n    </View>\n  );\n\n  //-------------- HELPER FUNCTIONS --------------\n\n  function getParentPosts(data) {\n    var parents = [];\n    for (let i = 0; i < data.length; i++) {\n      const element = data[i];\n      if (element.parrentID === \"\") {\n        parents[parents.length] = element;\n      }\n    }\n    return parents;\n  }\n\n  /**\n   * @param {*} type type of sort/filter\n   * @param {*} posts posts that are being sorted\n   */\n  function handleFilterChange(type, posts) {\n    var typeChange = type;\n    var currentPosts = posts;\n\n    setModalVisible(false);\n\n    switch (typeChange) {\n      case \"Recent\":\n        setFilterSelected(\"Recent\");\n        setPosts(\n          currentPosts.sort((a, b) =>\n            new Date(a.date + \" \" + a.time).getTime() <\n            new Date(b.date + \" \" + b.time).getTime()\n              ? 1\n              : -1\n          )\n        );\n        break;\n      case \"Most Comments\":\n        setFilterSelected(\"Most Comments\");\n        setPosts(\n          currentPosts.sort((a, b) => (a.comments < b.comments ? 1 : -1))\n        );\n        break;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: Platform.OS !== \"android\" ? StatusBar.currentHeight : 0,\n    flex: 1,\n  },\n  headerIcon: {\n    marginHorizontal: 20,\n  },\n  modalContainer: {\n    flex: 1,\n  },\n  titleText: {\n    fontSize: 16,\n    fontWeight: \"700\",\n    padding: 10,\n  },\n  modalSection: {\n    borderRadius: 4,\n    paddingHorizontal: 10,\n    paddingTop: 10,\n    paddingBottom: 40,\n    shadowOpacity: 1,\n    shadowRadius: 200,\n    shadowColor: \"black\",\n    shadowOffset: { height: 0, width: 0 },\n  },\n});\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}