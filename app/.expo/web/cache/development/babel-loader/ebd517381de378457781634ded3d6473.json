{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Feed.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { ColorPropType } from \"react-native-web/dist/index\";\nimport ThreadRow from \"../components/ThreadRow\";\nimport { firebase } from \"../services/Firebase\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { PreferencesContext } from \"../services/PreferencesContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nfunction Feed(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useContext = React.useContext(PreferencesContext),\n      toggleTheme = _React$useContext.toggleTheme,\n      isThemeDark = _React$useContext.isThemeDark;\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          style: styles.headerIcon,\n          onPress: function onPress() {\n            return alert(\"Apply filters\");\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"dots-vertical\",\n          size: 30,\n          color: colors.text,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }\n        }));\n      }\n    });\n  }, [navigation, colors]);\n  useEffect(function () {\n    getAllPosts();\n  }, []);\n\n  function getAllPosts() {\n    return _regeneratorRuntime.async(function getAllPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database().ref(\"posts/\").on(\"value\", function (snapshot) {\n              var data = snapshot.val();\n\n              if (data != null) {\n                setPosts(Object.values(data));\n              }\n            }, function (errorObject) {\n              console.log(\"The read failed: \" + errorObject.code);\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(ThreadRow, {\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 36\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: getParentPosts(posts),\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flex: 1\n  },\n  headerIcon: {\n    marginHorizontal: 20\n  }\n});\nexport default Feed;\n\nfunction getParentPosts(data) {\n  var parents = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var element = data[i];\n\n    if (element.parrentID === \"\") {\n      parents[parents.length] = element;\n    }\n  }\n\n  return parents;\n}","map":{"version":3,"sources":["/Users/dommccann/Documents/Personal/git/web-scraping-app/app/pages/Feed.js"],"names":["React","useEffect","useState","ColorPropType","ThreadRow","firebase","useTheme","PreferencesContext","MaterialCommunityIcons","Feed","navigation","posts","setPosts","colors","useContext","toggleTheme","isThemeDark","useLayoutEffect","setOptions","headerRight","styles","headerIcon","alert","text","getAllPosts","database","ref","on","snapshot","data","val","Object","values","errorObject","console","log","code","renderItem","item","container","getParentPosts","id","StyleSheet","create","paddingTop","Platform","OS","StatusBar","currentHeight","flex","marginHorizontal","parents","i","length","element","parrentID"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  FlatList,\n  TouchableOpacity,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  ColorPropType,\n} from \"react-native\";\nimport ThreadRow from \"../components/ThreadRow\";\nimport { firebase } from \"../services/Firebase\";\nimport { useTheme } from \"@react-navigation/native\";\nimport { PreferencesContext } from \"../services/PreferencesContext\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nfunction Feed({ navigation }) {\n  const [posts, setPosts] = useState([]);\n  const { colors } = useTheme();\n  const { toggleTheme, isThemeDark } = React.useContext(PreferencesContext);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerRight: () => (\n        <TouchableOpacity\n          style={styles.headerIcon}\n          onPress={() => alert(\"Apply filters\")}\n        >\n          <MaterialCommunityIcons\n            name=\"dots-vertical\"\n            size={30}\n            color={colors.text}\n          />\n        </TouchableOpacity>\n      ),\n    });\n  }, [navigation, colors]);\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n\n  async function getAllPosts() {\n    //fetches all posts from db\n    return await firebase\n      .database()\n      .ref(\"posts/\")\n      .on(\n        \"value\",\n        function (snapshot) {\n          let data = snapshot.val();\n          if (data != null) {\n            setPosts(Object.values(data));\n          }\n        },\n        function (errorObject) {\n          console.log(\"The read failed: \" + errorObject.code);\n        }\n      );\n  }\n\n  const renderItem = ({ item }) => <ThreadRow item={item}></ThreadRow>;\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView />\n      <FlatList\n        data={getParentPosts(posts)}\n        renderItem={renderItem}\n        keyExtractor={(item) => item.id}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flex: 1,\n  },\n  headerIcon: {\n    marginHorizontal: 20,\n  },\n});\n\nexport default Feed;\n\n//-------------- HELPER FUNCTIONS --------------\n\nfunction getParentPosts(data) {\n  var parents = [];\n  for (let i = 0; i < data.length; i++) {\n    const element = data[i];\n    if (element.parrentID === \"\") {\n      parents[parents.length] = element;\n    }\n  }\n  return parents;\n}\n"]},"metadata":{},"sourceType":"module"}